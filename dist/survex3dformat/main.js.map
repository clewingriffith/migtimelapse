{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/caveloader.service.ts","webpack:///./src/app/cavesurvey.ts","webpack:///./src/app/demloader.service.ts","webpack:///./src/app/world/world.component.css","webpack:///./src/app/world/world.component.html","webpack:///./src/app/world/world.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-world></app-world>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\ndeclare var DataStream: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'survex3dformat';\n\n \n  ngOnInit() {  \n    \n  }\n\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { WorldComponent } from './world/world.component';\nimport { CaveLoaderService } from './caveloader.service';\nimport { DEMLoaderService } from './demloader.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WorldComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [CaveLoaderService, DEMLoaderService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Observable,of, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\ndeclare var DataStream: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CaveLoaderService {\n\n  private labelBuffer = '';\n  private style;\n\n  constructor( private http: HttpClient) {\n    //Add on a function for reading a string terminated by an arbitrary character.\n    //This code is copied from datastream.js  readCString, but replacing the \n    //hardcoded '0' terminator with a value that can be passed in.\n    //We use it for reading strings terminated by '\\n', where we pass terminator=0x0a\n    DataStream.prototype.readTerminatedString = function(terminator, length) {\n        var blen = this.byteLength-this.position;\n        var u8 = new Uint8Array(this._buffer, this._byteOffset + this.position);\n        var len = blen;\n        if (length != null) {\n          len = Math.min(length, blen);\n        }\n        for (var i = 0; i < len && u8[i] != terminator; i++); // find first terminator byte (eg. 0 or 0x0a)\n        var s = DataStream.createStringFromArray(this.mapUint8Array(i));\n        if (length != null) {\n          this.position += len-i;\n        } else if (i != blen) {\n          this.position += 1; // trailing zero if not at end of buffer\n        }\n        return s;\n    }\n  }\n\n\n  private readHeader(stream) {\n        const expectedHeaderStr:string = \"Survex 3D Image File\\n\";\n        const headerStr = stream.readString(expectedHeaderStr.length);\n        if(headerStr !== expectedHeaderStr) {\n          throw new Error('Could not find Survex 3D Image File header');\n        }\n        const expectedVersionString:string = \"v8\\n\"\n        const versionStr = stream.readString(expectedVersionString.length);\n        if(versionStr !== expectedVersionString) {\n          throw new Error('Version does not match v8. Cannot parse');\n        }\n        const metadata = stream.readTerminatedString(0x0a);\n        console.log('Survey metatdata: ' + metadata);\n        const timestampStr = stream.readTerminatedString(0x0a);\n        if(timestampStr.startsWith('@')==false) {\n          throw new Error('unexpected timestamp string');\n        }\n        //strip the @ and interpret as a timestamp\n        const epochSeconds = parseInt(timestampStr.substr(1));\n        const timestamp = new Date(epochSeconds*1000);\n        console.log(timestamp);\n\n        const filewideFlags = stream.readUint8();\n        \n        return {\n          fileId: headerStr,\n          version: versionStr,\n          metadata: metadata,\n          timestamp: timestamp,\n          filewideFlags: filewideFlags          \n        }\n  }\n\n  private readLabel(stream) {\n    let b = stream.readUint8();\n    let D;\n    let A;\n    if(b > 0) {\n      D = b >> 4;\n      A = b & 0x0f;\n    } else {\n      b = stream.readUint8();\n      if(b != 0xff) {\n        D = b;\n      } else {\n        D = stream.readUint32();\n      }\n      b = stream.readUint8();\n      if(b != 0xff) {\n        A = b;\n      } else {\n        A = stream.readUint32();\n      }\n    }\n    const labelMod = stream.readString(A);\n    if(D !== 0) {\n      this.labelBuffer = this.labelBuffer.slice(0,-D);\n    }\n    this.labelBuffer=this.labelBuffer+labelMod;\n    return this.labelBuffer;\n  }\n\n\n  private readLRUDInt16(stream): number {\n    const val = stream.readInt16(); \n    if(val == 0xffff) { \n      return null; \n    } else { \n      return 0.01*parseInt(val);\n    }\n  }\n\n  private readLRUDInt32(stream): number {\n    const val = stream.readInt32(); \n    if(val == 0xffffffff) { \n      return null; \n    } else { \n      return 0.01*parseInt(val);\n    }\n  }\n\n\n\n  // copied from the survex codebase\n  private is_leap_year(year: number): boolean\n  {\n    return (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0));\n  } \n\n  // copied from the survex codebase\n  private ymd_from_days_since_1900(days: number)\n  {\n    let g, dg, c, dc, b, db, a, da, y, m;\n    days += 693901;\n    g = Math.trunc(days / 146097);\n    dg = days % 146097;\n    c = Math.trunc((Math.trunc(dg / 36524) + 1) * 3 / 4);\n    dc = dg - c * 36524;\n    b = Math.trunc(dc / 1461);\n    db = dc % 1461;\n    a = Math.trunc((Math.trunc(db / 365) + 1) * 3 / 4);\n    da = db - a * 365;\n    y = g * 400 + c * 100 + b * 4 + a;\n    m = Math.trunc((da * 5 + 308) / 153);\n    return [ \n      y + Math.trunc(m / 12),\n      m % 12 + 1,\n      da - Math.trunc((m + 2) * 153 / 5) + 123\n    ];\n  }\n\n  private date_from_days_since_1900(days: number): Date {\n    const ymd = this.ymd_from_days_since_1900(days);\n    return new Date(ymd[0], ymd[1]-1, ymd[2]);\n  }\n\n  private readItem(stream) {\n    \n    const code = stream.readUint8();\n    let item = { };\n    \n    if(code == 0x00) {\n        if(this.style === 'STYLE_NORMAL') {\n          item['codetype'] = 'STOP';\n        } else {\n          item['codetype'] = 'STYLE_NORMAL';\n          this.style = 'STYLE_NORMAL';\n        }\n    } else if (code == 0x01) {\n        item['codetype'] = 'STYLE_DIVING';\n        this.style = 'STYLE_DIVING';\n    } else if (code == 0x02) {\n        item['codetype'] = 'STYLE_CARTESIAN';\n        this.style = 'STYLE_CARTESIAN';\n    } else if (code == 0x03) {\n        item['codetype'] = 'STYLE_CYLPOLAR';\n        this.style = 'STYLE_CYLPOLAR';\n    } else if (code == 0x04) {\n        item['codetype'] = 'STYLE_NOSURVEY';\n        this.style = 'STYLE_NOSURVEY';\n    } else if (code == 0x0f) {\n      item['codetype'] = 'MOVE';\n      item['x'] = this.getCM(stream);\n      item['y'] = this.getCM(stream);\n      item['z'] = this.getCM(stream);\n    } else if (code == 0x10) {\n      item['codetype'] = 'DATE';\n    } else if (code == 0x11) {\n      item['codetype'] = 'DATE';\n      const daysSince1900 = stream.readUint16();\n      item['date']=this.date_from_days_since_1900(daysSince1900);\n    } else if (code == 0x12) {\n      item['codetype'] = 'DATE';\n      const daysSince1900 = stream.readUint16();\n      const dayspan = stream.readUint8();\n      const daysSince1900_2 = daysSince1900 + dayspan;\n      const date1 = this.date_from_days_since_1900(daysSince1900);\n      const date2 = this.date_from_days_since_1900(daysSince1900_2);\n      item['date'] = date1;\n      item['dates']=[date1, date2];\n    } else if (code == 0x13) {\n      item['codetype'] = 'DATE';\n      const daysSince1900 = stream.readUint16();\n      const daysSince1900_2 = stream.readUint16();\n      const date1 = this.date_from_days_since_1900(daysSince1900);\n      const date2 = this.date_from_days_since_1900(daysSince1900_2);\n      item['date'] = date1;\n      item['dates']=[date1, date2];\n    } else if (code == 0x1f) {\n        item['codetype'] = 'ERROR';\n        const legs = stream.readInt32();\n        const length = 0.01*parseInt(stream.readInt32());\n        const e = 0.01*parseInt(stream.readInt32());\n        const h = 0.01*parseInt(stream.readInt32());\n        const v = 0.01*parseInt(stream.readInt32());\n        item['error'] = { legs: legs, length: length, e:e, h:h, v:v };\n    } else if(code >= 0x30 && code <= 0x31) {\n      item['codetype'] = 'XSECT';\n      item['label'] = this.readLabel(stream);\n      item['l'] = this.readLRUDInt16(stream);\n      item['r'] = this.readLRUDInt16(stream);\n      item['u'] = this.readLRUDInt16(stream);\n      item['d'] = this.readLRUDInt16(stream);\n      const flag = (code & 0x01);\n      if(flag & 0x01) {\n        item['flag'] = 'LAST_IN_PASSAGE';\n      }\n    } else if(code >= 0x32 && code <= 0x33) {\n      item['codetype'] = 'XSECT';\n      item['label'] = this.readLabel(stream);\n      item['l'] = this.readLRUDInt32(stream);\n      item['r'] = this.readLRUDInt32(stream);\n      item['u'] = this.readLRUDInt32(stream);\n      item['d'] = this.readLRUDInt32(stream);\n      const flag = (code & 0x01);\n      if(flag & 0x01) {\n        item['flag'] = 'LAST_IN_PASSAGE';\n      }\n    } else if(code >= 0x40 && code <= 0x7f) {\n      item['codetype'] = 'LINE';\n\n      const flag = (code & 0x3f);\n      if(flag) {\n        item['flags']=[];\n      }\n      if(flag & 0x01) {\n        item['flags'].push('ABOVE_GROUND');\n      } \n      if (flag & 0x02) {\n        item['flags'].push('DUPLICATE');\n      }\n      if (flag & 0x04) {\n        item['flags'].push('SPLAY');\n      } \n\n      if(flag & 0x20) {\n        // omit label\n      } else {\n        item['label'] = this.readLabel(stream);\n      }\n        item['x'] = this.getCM(stream);\n        item['y'] = this.getCM(stream);\n        item['z'] = this.getCM(stream);\n\n    } else if(code >= 0x80 && code <=0xff) {\n        item['codetype'] = 'LABEL';\n        item['label'] = this.readLabel(stream);\n        item['x'] = this.getCM(stream);\n        item['y'] = this.getCM(stream);\n        item['z'] = this.getCM(stream);\n\n        const flag = (code & 0x7f);\n        if(flag) {\n          item['flags'] = []\n        }\n        if(flag & 0x01) {\n          item['flags'].push('ABOVE_GROUND');\n        }\n        if (flag & 0x02) {\n          item['flags'].push('UNDERGROUND');\n        }\n        if (flag & 0x04) {\n          item['flags'].push('ENTRANCE');\n        }\n        if (flag & 0x08) {\n          item['flags'].push('EXPORT');\n        }\n        if (flag & 0x10) {\n          item['flags'].push('FIXED');\n        }\n        if (flag & 0x20) {\n          item['flags'].push('ANONYMOUS');\n        }\n        if (flag & 0x40) {\n          item['flags'].push('PASSAGE_WALL');\n        } \n\n    } else {\n      // console.log('unknown code' + code);\n    }\n    return item;\n    \n  }\n\n  private getCM(stream) {\n    return parseFloat((0.01*parseInt(stream.readInt32())).toFixed(2));\n  }\n\n  public read3dFile(): Observable<any[]> {\n    //This attempts to parse survex 3d image files as specified at \n    //https://survex.com/docs/3dformat.htm\n    //It currently only handles version 8\n    return this.http.get('assets/mig.3d', {responseType: 'arraybuffer'}).pipe(map( data => {\n        var stream = new DataStream(data, 0,\n          DataStream.LITTLE_ENDIAN);\n\n        const header = this.readHeader(stream);\n        console.log(header);\n\n        let items = [];\n        while(stream.isEof() == false) {\n          const item = this.readItem(stream);\n          items.push(item); // console.log(item);\n        }\n\n        return items;\n      }\n    ));\n    \n  }\n\n\n\n}\n","\r\n\r\nexport class SurveyStation {\r\n    public labels: string[];\r\n    public flags: string[];\r\n    public i: number;\r\n    public x: number;   \r\n    public y: number;\r\n    public z: number;\r\n    constructor(\r\n        i: number,\r\n        x: number, \r\n        y:number, \r\n        z:number) {\r\n        this.i = i;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.labels = [];\r\n        this.flags = [];\r\n    }\r\n}\r\n\r\nexport class CaveSurvey {\r\n\r\n    public surveyStations = {};\r\n    public surveyLegs: SurveyStation[][] = [];\r\n    // takes a set of objects representing move, line, label commands from the 3d image format\r\n    constructor(items: Object[]) {\r\n        var currentStationKey;\r\n        var currentStationIndex = 0;\r\n        for(const item of items) {\r\n            //TODO filter out service survey legs\r\n            if(item['codetype'] === 'MOVE') {\r\n                const x:number = item['x'];\r\n                const y:number = item['y'];\r\n                const z:number = item['z'];\r\n                const stationKey = [x,y,z].toString();\r\n                if(this.surveyStations[stationKey] === undefined) {\r\n                    this.surveyStations[stationKey] = new SurveyStation(currentStationIndex++, item['x'], item['y'], item['z']);\r\n                }\r\n                currentStationKey = stationKey;\r\n            } \r\n            if(item['codetype'] === 'LINE') {\r\n                const x:number = item['x'];\r\n                const y:number = item['y'];\r\n                const z:number = item['z'];\r\n                const stationKey = [x,y,z].toString();\r\n                if(this.surveyStations[stationKey] === undefined) {\r\n                    this.surveyStations[stationKey] = new SurveyStation(currentStationIndex++,item['x'], item['y'], item['z']);\r\n                }\r\n                const startStation = this.surveyStations[currentStationKey];\r\n                const endStation = this.surveyStations[stationKey];\r\n                this.surveyLegs.push([startStation, endStation]);\r\n                currentStationKey = stationKey;\r\n            }\r\n            if(item['codetype'] === 'LABEL') {\r\n                const x:number = item['x'];\r\n                const y:number = item['y'];\r\n                const z:number = item['z'];\r\n                const stationKey = [x,y,z].toString();\r\n                if(this.surveyStations[stationKey] === undefined) {\r\n                    const newStation = new SurveyStation(currentStationIndex++,item['x'], item['y'], item['z']);\r\n                    newStation.labels.push(item['label']);\r\n                    newStation.flags = item['flags'];\r\n                    this.surveyStations[stationKey] = newStation;\r\n                } else {\r\n                    this.surveyStations[stationKey].labels.push(item['label']);\r\n                    this.surveyStations[stationKey].flags = this.surveyStations[stationKey].flags.concat(item['flags']);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {Observable,of, from } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DEMLoaderService {\r\n\r\n\r\n\r\n  constructor( private http: HttpClient) {\r\n\r\n  }\r\n\r\n\r\n  public readDEMData(tile: string, resolution: number): Observable<ArrayBuffer> {\r\n    //This parses a .asc.bin as preprocessed by a python script in this project\r\n    //processAscDem.py\r\n    //input data to that script is a .asc file from http://gis.arso.gov.si/evode/profile.aspx?id=atlas_voda_Lidar@Arso&culture=en-US\r\n    return this.http.get('assets/dem/GK1_' + tile + '.asc.' + resolution + 'm.bin', {responseType: 'arraybuffer'});\r\n    \r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"canvas {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\"","module.exports = \"<canvas #canvas (window:resize)=\\\"onResize($event)\\\"></canvas>\\n\"","\r\nimport { AfterViewInit, Component, ElementRef, Input, ViewChild } from '@angular/core';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three-orbitcontrols-ts';\r\nimport { CaveLoaderService } from '../caveloader.service';\r\nimport { DEMLoaderService } from '../demloader.service';\r\nimport { CaveSurvey } from '../cavesurvey';\r\nimport { SurveyStation } from '../cavesurvey';\r\n\r\n@Component({\r\n  selector: 'app-world',\r\n  templateUrl: './world.component.html',\r\n  styleUrls: ['./world.component.css']\r\n})\r\nexport class WorldComponent implements AfterViewInit {\r\n\r\n  private camera: THREE.PerspectiveCamera;\r\n  private controls: OrbitControls;\r\n  private survey: CaveSurvey;\r\n  private get canvas() : HTMLCanvasElement {\r\n    return this.canvasRef.nativeElement;\r\n  }\r\n  \r\n  @ViewChild('canvas')\r\n  private canvasRef: ElementRef<HTMLCanvasElement>;\r\n\r\n  private legs: THREE.LineSegments;\r\n  private vertices = [];\r\n  private renderer: THREE.WebGLRenderer;\r\n\r\n  private demPointCloud: THREE.Points;\r\n\r\n  private demMeshMaterial: THREE.MeshLambertMaterial;\r\n\r\n  private scene: THREE.Scene;\r\n  private group: THREE.Object3D;\r\n\r\n  private numLegsToDisplay = 0;\r\n\r\n  public rotationSpeedX: number = 0.005;\r\n  public rotationSpeedY: number = 0.01;\r\n\r\n  @Input()\r\n  public size: number = 20;\r\n\r\n\r\n  /* STAGE PROPERTIES */\r\n  @Input()\r\n  public cameraZ: number = 40;\r\n\r\n  @Input()\r\n  public fieldOfView: number = 70;\r\n\r\n  @Input('nearClipping')\r\n  public nearClippingPane: number = 1;\r\n\r\n  @Input('farClipping')\r\n  public farClippingPane: number = 100000;\r\n\r\n\r\n  constructor(private caveloader: CaveLoaderService, private demloader: DEMLoaderService) {\r\n\r\n   }\r\n\r\n\r\n\r\n  /* STAGING, ANIMATION, AND RENDERING */\r\n\r\n  /**\r\n   * Animate the cave survey, drawing progressively more survey legs\r\n   */\r\n  private animateSurvey() {\r\n    this.numLegsToDisplay+=10;\r\n    this.numLegsToDisplay = Math.min(this.numLegsToDisplay, this.survey.surveyLegs.length);\r\n    var geo = this.legs.geometry as THREE.BufferGeometry;\r\n    geo.setDrawRange(0,this.numLegsToDisplay);\r\n    this.controls.update();\r\n    //console.log(this.controls.getAzimuthalAngle())\r\n  }\r\n\r\n\r\n  // pass a tile name like 404_123\r\n  // This reads the dem data for the tile and creates geometry for it.\r\n  // it also loads appropriate texture information\r\n  // resolution should be 1 for 1m resolution, 10 for 10m resolution, 100 for 100m resolution\r\n  private createMountainPointcloud(tile: string, resolution: number) {\r\n    this.demloader.readDEMData(tile, resolution).subscribe( arraybuffer => {\r\n      const geometry = new THREE.BufferGeometry();\r\n      //const geometry = new THREE.PlaneBufferGeometry(1000,1000,99,99);\r\n      const demPointArray = new Float32Array(arraybuffer);\r\n\r\n      var texture = new THREE.TextureLoader().load( 'assets/satellite/' + tile + '.jpg' );\r\n      const grid_width = 1+(1000/resolution);\r\n      //build out indices for mesh version\r\n      var indices = [];\r\n      var uvs = [];\r\n      var normals = [];\r\n      var ix; \r\n      var iy;\r\n      const gridX = grid_width - 1;\r\n\t    const gridY = grid_width - 1;\r\n\r\n\t    const gridX1 = gridX + 1;\r\n\t    const gridY1 = gridY + 1;\r\n      for ( iy=0; iy<gridY; iy++ ) {\r\n        for ( ix=0; ix<gridX; ix++ ) {\r\n          var a = ix + gridX1  * iy;\r\n          var b = ix + gridX1  * ( iy + 1 );\r\n          var c = ( ix + 1 ) + gridX1  * ( iy + 1 );\r\n          var d = ( ix + 1 ) + gridX1  * iy;\r\n\r\n          // faces\r\n          indices.push( a, b, d );\r\n          indices.push( b, c, d );\r\n\r\n        }\r\n      }\r\n      \r\nvar segment_width = 1000 / gridX;\r\n\tvar segment_height = 1000 / gridY;\r\nvar width_half = 500;\r\n\tvar height_half = 500;\r\n      for ( iy = 0; iy < gridY1; iy ++ ) {\r\n\t\t    var y = iy * segment_height - height_half;\r\n  \t\t  for ( ix = 0; ix < gridX1; ix ++ ) {\r\n\t    \t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\t    \r\n\t\t\t    uvs.push(  ( iy / gridY ) );\r\nuvs.push( ix / gridX );\r\n  \t\t  }\r\n\r\n\t    }\r\n\r\n      //indices.push(0,1,100);\r\n      \r\n      geometry.setIndex(indices);\r\n      geometry.addAttribute( 'position', new THREE.BufferAttribute( demPointArray, 3 ) );\r\n      geometry.addAttribute( 'uv', new THREE.Float32BufferAttribute( uvs, 2 ) );\r\n      geometry.computeVertexNormals();\r\n      var demMaterial = new THREE.PointsMaterial( { color: 0x888888 } );\r\n      this.demMeshMaterial = new THREE.MeshLambertMaterial( { color: 0xcccccc, map: texture,  wireframe: false } );\r\n      var mesh = new THREE.Mesh( geometry, this.demMeshMaterial );\r\n      var demPointCloud = new THREE.Points(geometry, demMaterial);\r\n      geometry.computeBoundingBox();\r\n      geometry.computeBoundingSphere();\r\n      \r\n      //this.scene.add(demPointCloud);\r\n  //    //this.demPointCloud = new THREE.Points( geometry, demMaterial );\r\n      this.group.add(mesh);\r\n\r\n\r\n\r\n\r\n\r\n    });\r\n  }\r\n  \r\n  private createGeometry() {\r\n\r\n    this.caveloader.read3dFile().subscribe( fileItems => {\r\n        this.survey = new CaveSurvey(fileItems);\r\n        // let texture = new THREE.TextureLoader().load(this.texture);\r\n        //var material = new THREE.PointsMaterial( { color: 0xffffff } );\r\n        var material = new THREE.LineBasicMaterial( { \r\n          color: 0xffffff\r\n         } );\r\n\r\n        var geometry = new THREE.BufferGeometry();\r\n        \r\n\r\n        var surveyStations: SurveyStation[];\r\n        //Don't blindly push the stations. Some of them are fixed points with incorrect locations\r\n        surveyStations = Object.values(this.survey.surveyStations) as SurveyStation[];\r\n        surveyStations.forEach( station => { \r\n          //if(station.flags.includes(\"UNDERGROUND\")) {\r\n            this.vertices.push(station.x, station.y, station.z);\r\n          //}\r\n        });\r\n\r\n        \r\n\r\n        var legIndices = [];\r\n        this.survey.surveyLegs.forEach( leg => {\r\n          if(leg[0].flags.includes('UNDERGROUND') || leg[1].flags.includes('UNDERGROUND')) { \r\n            legIndices.push(leg[0].i); legIndices.push(leg[1].i);\r\n\r\n          } \r\n        });\r\n\r\n        const vertexArray = new Float32Array(this.vertices);\r\n        \r\n       // itemSize = 3 because there are 3 values (components) per vertex\r\n        geometry.setIndex(legIndices);\r\n        geometry.addAttribute( 'position', new THREE.BufferAttribute( vertexArray, 3 ) );\r\n        geometry.computeBoundingSphere();\r\n        geometry.computeBoundingBox();\r\n\r\n        \r\n        //const c = geometry.boundingSphere.center;\r\n        //console.log(c);\r\n\r\n        //test center of non-indexed version\r\n        const nonindexed = geometry.toNonIndexed();\r\n        nonindexed.computeBoundingSphere();\r\n        const c = nonindexed.boundingSphere.center;\r\n\r\n\r\n        //geometry.translate(c.x, c.y, c.z);\r\n        //geometry.scale(0.1, 0.1, 0.1);\r\n        // geometry.addAttribute( 'color', new THREE.Float32BufferAttribute( colors, 3 ) );\r\n        \r\n        this.legs = new THREE.LineSegments( nonindexed, material );\r\n        // Add cube to scene\r\n        this.group.add(this.legs);\r\n        //var box = new THREE.BoxHelper(this.legs, new THREE.Color('red'));\r\n        //this.group.add(box);\r\n      \r\n\r\n        this.camera.position.set(c.x,c.y,c.z+nonindexed.boundingSphere.radius);\r\n        this.camera.up.set(0,0,1);\r\n        this.camera.lookAt(c.x,c.y,c.z);\r\n        this.controls.target = new THREE.Vector3(c.x,c.y,c.z);\r\n        //this.controls.maxAzimuthAngle = Math.PI / 4;\r\n        //this.controls.minAzimuthAngle = 0;\r\n       /* this.controls.maxAzimuthAngle=Math.PI;\r\n        this.controls.minAzimuthAngle=Math.PI-1;\r\n        this.controls.maxPolarAngle=Math.PI;\r\n        this.controls.minPolarAngle=0;*/\r\n        this.controls.update();\r\n        this.startRenderingLoop();\r\n    });\r\n  \r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * Create the scene\r\n   */\r\n  private createScene() {\r\n    /* Scene */\r\n    THREE.Object3D.DefaultUp=new THREE.Vector3(0,0,1);\r\n    this.scene = new THREE.Scene();\r\n    this.group = new THREE.Object3D();\r\n    //this.group.rotation.x = -Math.PI / 2;\r\n    \r\n    this.scene.add(this.group);\r\n\r\n    /* Camera */\r\n    let aspectRatio = this.getAspectRatio();\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      this.fieldOfView,\r\n      aspectRatio,\r\n      this.nearClippingPane,\r\n      this.farClippingPane\r\n    );\r\n    this.controls = new OrbitControls( this.camera );\r\n    this.controls.autoRotate=true;\r\n    this.controls.enablePan=false;\r\n    this.controls.enableZoom=true;\r\n    this.controls.autoRotateSpeed=4.0;\r\n    //this.camera.position.z = this.cameraZ;\r\n\r\n      /*var axisHelper = new THREE.AxesHelper(2000);\r\n      axisHelper.position.set(404000,123000,0);\r\n      this.group.add(axisHelper);*/\r\n\r\n\r\n      var skylight = new THREE.HemisphereLight( 0xffffbb, 0x080820, 0.2 );\r\n      this.group.add( skylight );\r\n      var sunLight = new THREE.DirectionalLight( 0xffffff, 0.8 );\r\n      this.group.add(sunLight);\r\n  }\r\n\r\n  private getAspectRatio() {\r\n    return this.canvas.clientWidth / this.canvas.clientHeight;\r\n  }\r\n\r\n  /**\r\n   * Start the rendering loop\r\n   */\r\n  private startRenderingLoop() {\r\n    /* Renderer */\r\n    // Use canvas element in template\r\n    this.renderer = new THREE.WebGLRenderer({ canvas: this.canvas });\r\n    this.renderer.setPixelRatio(devicePixelRatio);\r\n    this.renderer.setSize(this.canvas.clientWidth, this.canvas.clientHeight);\r\n\r\n    let component: WorldComponent = this;\r\n    (function render() {\r\n      requestAnimationFrame(render);\r\n      \r\n      component.animateSurvey();\r\n      component.renderer.render(component.scene, component.camera);\r\n    }());\r\n  }\r\n\r\n\r\n\r\n  /* EVENTS */\r\n\r\n  /**\r\n   * Update scene after resizing. \r\n   */\r\n  public onResize() {\r\n    this.camera.aspect = this.getAspectRatio();\r\n    this.camera.updateProjectionMatrix();\r\n\r\n    this.renderer.setSize(this.canvas.clientWidth, this.canvas.clientHeight);\r\n  }\r\n\r\n\r\n\r\n  /* LIFECYCLE */\r\n\r\n  /**\r\n   * We need to wait until template is bound to DOM, as we need the view\r\n   * dimensions to create the scene. We could create the cube in a Init hook,\r\n   * but we would be unable to add it to the scene until now.\r\n   */\r\n  public ngAfterViewInit() {\r\n    this.createScene();\r\n    this.createMountainPointcloud(\"403_121\", 10);\r\n    this.createMountainPointcloud(\"403_122\", 10);\r\n    this.createMountainPointcloud(\"403_123\", 10);\r\n    this.createMountainPointcloud(\"403_124\", 10);\r\n    this.createMountainPointcloud(\"404_121\", 10);\r\n    this.createMountainPointcloud(\"404_122\", 10);   //1\r\n    this.createMountainPointcloud(\"404_123\", 10);   //1\r\n    this.createMountainPointcloud(\"404_124\", 10);   //1\r\n    this.createMountainPointcloud(\"405_121\", 10);\r\n    this.createMountainPointcloud(\"405_122\", 10);\r\n    this.createMountainPointcloud(\"405_123\", 10);   //1\r\n    this.createMountainPointcloud(\"405_124\", 10);   //1\r\n    //this.createMountainPointcloud(\"406_122\", 1);\r\n    //this.createMountainPointcloud(\"406_123\", 1);\r\n    //this.createMountainPointcloud(\"406_124\", 1);\r\n    this.createGeometry();\r\n        //this.startRenderingLoop();\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}